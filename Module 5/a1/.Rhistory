getwd()
getwd()
mvtWeek1 <- read.csv("C:/Users/dellg7/Downloads/mvtWeek1.csv")
View(mvtWeek1)
hist(mvt$Date, breaks = 100)
mvt = read.csv(mvtWeek1)
mvt = read.csv(mvtWeek1.csv)
mvt <- read.csv("C:/Users/dellg7/Downloads/mvtWeek1.csv")
View(mvt)
hist(mvt$Date, breaks = 100)
DateConvert = as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
mvt$Date = DateConvert
hist(mvt$Date, breaks = 100)
save.image("C:/Users/dellg7/Desktop/temm.RData")
load("C:/Users/dellg7/Desktop/temm.RData")
The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike *Knit*, *Preview* does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.
hist(mvt$Date, breaks = 100)
boxplot(mvt$Date ~ mvt$Arrest)
table(mvt$Arrest, mvt$Year == 2001)
2152/(13384+2152)
2152/(18517+2152)
table(mvt$Arrest, mvt$Year == 2007)
1212/(13068+1212)
table(mvt$Arrest, mvt$Year == 2012)
550/(13542+550)
---
title: "R Notebook"
output: html_notebook
---
hist(mvt$Date, breaks = 100)
boxplot(mvt$Date ~ mvt$Arrest)
table(mvt$Arrest, mvt$Year == 2001)
plot(cars)
plot(cars)
hist(mvt$Date, breaks = 100)
boxplot(mvt$Date ~ mvt$Arrest)
table(mvt$Arrest, mvt$Year == 2001)
Ä« hist(mvt$Date, breaks = 100)
hist(mvt$Date, breaks = 100)
boxplot(mvt$Date ~ mvt$Arrest)
table(mvt$Arrest, mvt$Year == 2001)
plot(cars)
hist(mvt$Date, breaks = 100)
hist(mvt$Date, breaks = 100)
setwd("E:/Data-Analytics/Module 5/a1")
hour = read.csv("hour.csv")
day = read.csv("day.csv")
hour = read.csv("hour.csv")
View(hour)
#1 #2
str(hour)
#3
max(hour$temp) - min(hour$temp)
#4
table(hour$workingday)
hour$workingday == 1
nrow(hour$workingday == 1)
#5
table(hour$season)
#7
summary(hour$dteday)
#7
summary(hour)
#7
median(hour$dteday)
#7
as.numeric(median(hour$dteday))
#5
table(hour$season)
#7
subset(hour, hour$dteday >= "2012-5-18" & hour$dteday <= "2012-5-21")
mean(hour$cnt)
sort(tapply(hour$cnt, hour$dteday,mean))
#10
plot(hour$yr, hour$cnt)
#9
sort(tapply(hour$cnt, hour$yr,mean))
table(c(hour$weekday,hour$cnt))
summary(hour$weekday)
mean(c(hour$weekday,hour$cnt))
mean(hour$weekday,hour$cnt)
install.packages('plyr')
library(plyr)
ddply(hour,hour$weekday,mean(hour$cnt))
ddply(hour,.(hour$weekday),summerize,mean(hour$cnt))
#8
sort(tapply(hour$cnt, hour$dteday,mean))
#9
sort(tapply(hour$cnt, hour$weekday,mean))
new_hour = subset(hour, hour$year == 0)
sort(tapply(new_hour$cnt, new_hour$weekday,mean))
str(new_hour)
new_hour = subset(hour, hour$yr == 0)
str(new_hour)
sort(tapply(new_hour$cnt, new_hour$weekday,mean))
sum(hour$cnt)
