getwd()
getwd()
mvtWeek1 <- read.csv("C:/Users/dellg7/Downloads/mvtWeek1.csv")
View(mvtWeek1)
hist(mvt$Date, breaks = 100)
mvt = read.csv(mvtWeek1)
mvt = read.csv(mvtWeek1.csv)
mvt <- read.csv("C:/Users/dellg7/Downloads/mvtWeek1.csv")
View(mvt)
hist(mvt$Date, breaks = 100)
DateConvert = as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
mvt$Date = DateConvert
hist(mvt$Date, breaks = 100)
save.image("C:/Users/dellg7/Desktop/temm.RData")
load("C:/Users/dellg7/Desktop/temm.RData")
hist(mvt$Date, breaks = 100)
hist(mvt$Date, breaks = 100)
boxplot(mvt$Date ~ mvt$Arrest)
table(mvt$Arrest, mvt$Year == 2001)
table(mvt$Arrest, mvt$Year == 2001)
2152/(18517+2152)
#6
table(mvt$Arrest, mvt$Year == 2007)
2152/(18517+2152)
#7
table(mvt$Arrest, mvt$Year == 2012)
2152/(18517+2152)
#8
sort(table(mvt$LocationDescription))
#9
Top5 = subset(mvt, mvt$LocationDescription == STREET |
mvt$LocationDescription == PARKING LOT/GARAGE(NON.RESID.)|
mvt$LocationDescription == ALLEY |
mvt$LocationDescription == GAS STATION |
mvt$LocationDescription == DRIVEWAY - RESIDENTIAL)
#9
Top5 = subset(mvt, mvt$LocationDescription == "STREET" |
mvt$LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
mvt$LocationDescription == "ALLEY" |
mvt$LocationDescription == "GAS STATION" |
mvt$LocationDescription == "DRIVEWAY - RESIDENTIAL"")
#9
Top5 = subset(mvt, mvt$LocationDescription == "STREET" |
mvt$LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
mvt$LocationDescription == "ALLEY" |
mvt$LocationDescription == "GAS STATION" |
mvt$LocationDescription == "DRIVEWAY - RESIDENTIAL")
Top5$LocationDescription = factor(Top5$LocationDescription)
#9
Top5 = subset(mvt, mvt$LocationDescription == "STREET" |
mvt$LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
mvt$LocationDescription == "ALLEY" |
mvt$LocationDescription == "GAS STATION" |
mvt$LocationDescription == "DRIVEWAY - RESIDENTIAL")
Top5$LocationDescription = factor(Top5$LocationDescription)
#9
Top5 = subset(mvt, mvt$LocationDescription == "STREET" |
mvt$LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
mvt$LocationDescription == "ALLEY" |
mvt$LocationDescription == "GAS STATION" |
mvt$LocationDescription == "DRIVEWAY - RESIDENTIAL")
Top5$LocationDescription = factor(Top5$LocationDescription)
Top5$LocationDescription
#9
Top5 = subset(mvt, mvt$LocationDescription == "STREET" |
mvt$LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
mvt$LocationDescription == "ALLEY" |
mvt$LocationDescription == "GAS STATION" |
mvt$LocationDescription == "DRIVEWAY - RESIDENTIAL")
Top5$LocationDescription = factor(Top5$LocationDescription)
gasStation = subset(Top5, Top5$LocationDescription == "GAS STATION")
which.max(table(gasStation$Weekday))
#9
Top5 = subset(mvt, mvt$LocationDescription == "STREET" |
mvt$LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
mvt$LocationDescription == "ALLEY" |
mvt$LocationDescription == "GAS STATION" |
mvt$LocationDescription == "DRIVEWAY - RESIDENTIAL")
Top5$LocationDescription = factor(Top5$LocationDescription)
gasStation = subset(Top5, Top5$LocationDescription == "GAS STATION")
which.max(table(gasStation$Weekday))
#9
Top5 = subset(mvt, mvt$LocationDescription == "STREET" |
mvt$LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
mvt$LocationDescription == "ALLEY" |
mvt$LocationDescription == "GAS STATION" |
mvt$LocationDescription == "DRIVEWAY - RESIDENTIAL")
Top5$LocationDescription = factor(Top5$LocationDescription)
gasStation = subset(Top5, Top5$LocationDescription == "GAS STATION")
which.max(table(gasStation$Weekday))
#10
resDri <- subset(Top5, Top5$LocationDescription=="DRIVEWAY - RESIDENTIAL")
which.min(table(resDri$Weekday))
mvt$Date = DateConvert
mvt$Month = months(DateConvert)
mvt$Weekday = weekdays(DateConvert)
mvt$Date = DateConvert
#9
Top5 = subset(mvt, mvt$LocationDescription == "STREET" |
mvt$LocationDescription == "PARKING LOT/GARAGE(NON.RESID.)" |
mvt$LocationDescription == "ALLEY" |
mvt$LocationDescription == "GAS STATION" |
mvt$LocationDescription == "DRIVEWAY - RESIDENTIAL")
Top5$LocationDescription = factor(Top5$LocationDescription)
gasStation = subset(Top5, Top5$LocationDescription == "GAS STATION")
which.max(table(gasStation$Weekday))
#10
resDri <- subset(Top5, Top5$LocationDescription=="DRIVEWAY - RESIDENTIAL")
which.min(table(resDri$Weekday))
The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike *Knit*, *Preview* does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.
setwd("E:/Data-Analytics/Module 1")
IBM = read.csv("IBMStock.csv")
GE = read.csv("GEStock.csv")
ProcterGamble = read.csv("ProcterGambleStock.csv")
CocaCola = read.csv("CocaColaStock.csv")
Boeing = read.csv("BoeingStock.csv")
View(Boeing)
View(Boeing)
View(Boeing)
View(Boeing)
#1
Boeing$Date = as.Date(Boeing$Date, " % m / % d / % y ")
#1
Boeing$Date = as.Date(Boeing$Date, " % m / % d / % y ")
#1
Boeing$Date = as.Date(Boeing$Date, " % m / % d / % y ")
#1
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
Boeing = read.csv("BoeingStock.csv")
#1
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
#1
IBM$Date = as.Date(IBM$Date, "%m/%d/%y")
GE$Date = as.Date(GE$Date, "%m/%d/%y")
CocaCola$Date = as.Date(CocaCola$Date, "%m/%d/%y")
ProcterGamble$Date = as.Date(ProcterGamble$Date, "%m/%d/%y")
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
View(ProcterGamble)
#2
which.min(Boeing$Date)
#2
which.min(Boeing$Date)
Boeing[1]
Boeing$Date[1]
#3
which.max(Boeing$Date)
Boeing$Date[1]
#2
which.min(Boeing$Date)
#3
which.max(Boeing$Date)
#3
which.max(Boeing$Date) #ans=480
Boeing$Date[480]
#5
which.min(Boeing$StockPrice)
Boeing$StockPrice[49]
GE$StockPrice[49]
#5
which.min(GE$StockPrice) #ans=49
#5
which.min(GE$StockPrice) #ans=471
GE$StockPrice[471]
#6
summary(CocaCola)
#5
min(GE$StockPrice) #ans=471
#7
summary(Boeing)
#8
sd(ProcterGamble$StockPrice)
#9
plot(CocaCola$Date, CocaCola$StockPrice)
#9
plot(CocaCola$Date, CocaCola$StockPrice, "l")
#10
CocaCola$Date[which.min(CocaCola$StockPrice)]
#11
CocaCola$Date[which.max(CocaCola$StockPrice)]
#11
lines(ProcterGamble$Date, ProcterGamble$StockPrice)
#11
lines(ProcterGamble$Date, ProcterGamble$StockPrice, col="red")
lines(CocaCola$Date, CocaCola$StockPrice, col="red")
lines(CocaCola$Date, CocaCola$StockPrice, col="blue")
#11
lines(ProcterGamble$Date, ProcterGamble$StockPrice, col="red", lty=2)
lines(CocaCola$Date, CocaCola$StockPrice, col="blue")
#11
lines(ProcterGamble$Date, ProcterGamble$StockPrice, col="red", lty=2)
lines(CocaCola$Date, CocaCola$StockPrice, col="blue")
#11
lines(ProcterGamble$Date, ProcterGamble$StockPrice,lty=2, col="red")
lines(CocaCola$Date, CocaCola$StockPrice, col="blue")
#11
lines(ProcterGamble$Date, ProcterGamble$StockPrice,lty=2, col="red")
lines(CocaCola$Date, CocaCola$StockPrice, col="blue")
#11
lines(ProcterGamble$Date, ProcterGamble$StockPrice,lty=2, col="red")
#9
plot(CocaCola$Date, CocaCola$StockPrice, "l")
#11
lines(ProcterGamble$Date, ProcterGamble$StockPrice,lty=2, col="red")
#lines(CocaCola$Date, CocaCola$StockPrice, col="blue")
#11
lines(ProcterGamble$Date, ProcterGamble$StockPrice,lty=2, col="red")
lines(CocaCola$Date, CocaCola$StockPrice, col="blue")
#9
plot(CocaCola$Date, CocaCola$StockPrice, "l")
#9
plot(CocaCola$Date, CocaCola$StockPrice)
#9
plot(CocaCola$Date, CocaCola$StockPrice, "l")
#11
lines(ProcterGamble$Date, ProcterGamble$StockPrice,lty=2, col="red")
#lines(CocaCola$Date, CocaCola$StockPrice, col="blue")
#11
lines(ProcterGamble$Date, ProcterGamble$StockPrice,lty=2, col="red")
lines(CocaCola$Date, CocaCola$StockPrice, col="blue")
#12
abline(v=as.Date(c("1983-01-01")), lwd=2)
#14
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l ", col="red ", ylim=c(0,210))
#14
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l ", col="red ", ylim=c(0,210))
#14
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
lines(Boeing$Date[301:432], Boeing$StockPrice[301:432], col="blue")
#14
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
lines(Boeing$Date[301:432], Boeing$StockPrice[301:432], col="blue")
lines(GE$Date[301:432], GE$StockPrice[301:432], col="green")
lines(IBM$Date[301:432], IBM$StockPrice[301:432], col="orange")
#14
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
lines(Boeing$Date[301:432], Boeing$StockPrice[301:432], col="blue")
lines(GE$Date[301:432], GE$StockPrice[301:432], col="green")
lines(IBM$Date[301:432], IBM$StockPrice[301:432], col="orange")
lines(ProcterGamble$Date[301:432], ProcterGamble$StockPrice[301:432], col="blue")
#14
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
lines(Boeing$Date[301:432], Boeing$StockPrice[301:432], col="blue")
lines(GE$Date[301:432], GE$StockPrice[301:432], col="green")
lines(IBM$Date[301:432], IBM$StockPrice[301:432], col="orange")
lines(ProcterGamble$Date[301:432], ProcterGamble$StockPrice[301:432], col="violet")
#16
abline(v=as.Date(c("1997-09-01")), lwd=2)
abline(v=as.Date(c("1997-11-01")), lwd=2)
#17
abline(v=as.Date(c("2004-01-01")), lwd=2)
abline(v=as.Date(c("2005-01-01")), lwd=2)
#18
tapply(IBM$StockPrice, months(IBM$Date), mean)
mean(IBM$StockPrice)
#19
max(tapply(GE$StockPrice, months(GE$Date), mean))
max(tapply(CocaCola$StockPrice, months(CocaCola$Date), mean))
#19
which.max(tapply(GE$StockPrice, months(GE$Date), mean))
max(tapply(CocaCola$StockPrice, months(CocaCola$Date), mean))
#19
which.max(tapply(GE$StockPrice, months(GE$Date), mean))
which.max(tapply(CocaCola$StockPrice, months(CocaCola$Date), mean))
#20
tapply(Boeing$StockPrice, months(Boeing$Date), mean)
tapply(CocaCola$StockPrice, months(CocaCola$Date), mean)
tapply(GE$StockPrice, months(GE$Date), mean)
tapply(IBM$StockPrice, months(IBM$Date), mean)
tapply(ProcterGamble$StockPrice, months(ProcterGamble$Date), mean)
plot(cars)
CPS = read.csv("CPSData.csv")
MetroAreaMap = read.csv("MetroAreaCodes.csv")
CountryMap = read.csv("CountryCodes.csv")
View(MetroAreaMap)
View(CountryMap)
View(CPS)
#1
summary(CPS)
str(CPS)
#3
min(sort(table(CPS$Region)))
#3
which.min(sort(table(CPS$Region)))
#3
which.min(sort(table(CPS$State)))
#4
which.max(sort(table(CPS$State)))
#5
1-(nrow(subset(CPS, CPS$Citizenship == "Non-Citizen")) / nrow(CPS))
#6
table(CPS$Race, CPS$Hispanic)
#7
summary(CPS)
#8
is.na(CPS$Married)
#8
table(CPS$Region , is.na(CPS$Married)
#8
table(CPS$Region , is.na(CPS$Married))
#8
table(CPS$Region , is.na(CPS$Married))
#8
table(CPS$Region , is.na(CPS$Married))
table(CPS$Sex , is.na(CPS$Married))
table(CPS$Age , is.na(CPS$Married))
table(CPS$Citizenship , is.na(CPS$Married))
#9
table(CPS$State, is.na(CPS$MetroAreaCode))
#11
table(CPS$Region, is.na(CPS$MetroAreaCode))
#12
tapply(is.na(CPS$MetroAreaCode), CPS$Region, mean)
#12
tapply(is.na(CPS$MetroAreaCode), CPS$State, mean)
#12
tapply(is.na(CPS$MetroAreaCode), CPS$State, mean)
sort(tapply(is.na(CPS$MetroAreaCode), CPS$State, mean))
#14
str(MetroAreaMap)
#15
str(CountryMap)
#16
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
str(CPS)
summary(CPS)
#18
table(CPS$MetroArea)
#18
sort(table(CPS$MetroArea))
#19
tapply(CPS$Hispanic, CPS$MetroArea, mean)
#19
sort(tapply(CPS$Hispanic, CPS$MetroArea, mean))
#20
table(CPS$MetroArea, CPS$Race == "Asian")
#20
sort(tapply(CPS$Race == "Asian", CPS$MetroArea, mean))
#21
sort(tapply(CPS$Education == "No high school diploma ", CPS$MetroArea, mean, na.rm = TRUE))
#21
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm = TRUE))
#22
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
str(CPS)
summary(CPS)
#24
sort(table(CPS$Country))
#25
table(CPS$MetroArea == "New York - Northern New Jersey - Long Island, NY - NJ - PA", CPS$Country != "United States")
portion(table(CPS$MetroArea == "New York - Northern New Jersey - Long Island, NY - NJ - PA", CPS$Country != "United States"))
14412/(14412+82493)
#25
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States")
#25
prop.table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States")
#25
prop.table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States")
#25
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States")
1668(1668+3736)
1668(1668+3736)
1668(1668+3736)
1668/(1668+3736)
#26
table(CPS$MetroArea, CPS$Country == "India")
#26
sort(table(CPS$MetroArea, CPS$Country == "India"))
#26
sort(table(CPS$MetroArea, CPS$Country == "India"))
#26
table(CPS$MetroArea, CPS$Country == "India")
#26
sort(tapply(CPS$Country == "India", CPS$MetroArea, sum, na.rm=TRUE))
#27
sort(tapply(CPS$Country == "Brazil", CPS$MetroArea, sum, na.rm=TRUE))
#28
sort(tapply(CPS$Country == "Somalia", CPS$MetroArea, sum, na.rm=TRUE))
